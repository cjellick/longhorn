FROM ubuntu:16.04

# Setup environment
ENV PATH /go/bin:$PATH
ENV DAPPER_DOCKER_SOCKET true
ENV DAPPER_ENV TAG REPO DOCKER_LONGHORN_DRIVER_DEV_DIR LONGHORN_ORCHESTRATION_DEV_DIR
ENV DAPPER_OUTPUT bin
ENV DAPPER_RUN_ARGS --privileged --tmpfs /go/src/github.com/rancher/longhorn/integration/.venv:exec --tmpfs /go/src/github.com/rancher/longhorn/integration/.tox:exec -v /dev:/host/dev --pid host
ENV DAPPER_SOURCE /go/src/github.com/rancher/longhorn
ENV TRASH_CACHE ${DAPPER_SOURCE}/.trash-cache
ENV DOCKER_LONGHORN_DRIVER_URL https://github.com/cjellick/docker-longhorn-driver.git
ENV DOCKER_LONGHORN_DRIVER_COMMIT 709c607b6ca87670270721303b03bf34c6b80756

WORKDIR ${DAPPER_SOURCE}

# Install packages
RUN apt-get update && \
    apt-get install -y \
        cmake \
        curl \
        git \
        libglib2.0-dev \
        libkmod-dev \
        libnl-genl-3-dev \
        linux-libc-dev \
        pkg-config \
        psmisc \
        python-tox \
        qemu-utils \
        fuse

# Install Go 1.6
RUN curl -o go.tar.gz https://storage.googleapis.com/golang/go1.6.2.linux-amd64.tar.gz
RUN echo 'e40c36ae71756198478624ed1bb4ce17597b3c19d243f3f0899bb5740d56212a  go.tar.gz' | sha256sum -c && \
    tar xzf go.tar.gz -C /usr/local && \
    rm go.tar.gz
RUN mkdir -p /go
ENV PATH $PATH:/usr/local/go/bin
ENV GOPATH=/go

# Go tools
RUN go get github.com/rancher/trash
RUN go get github.com/golang/lint/golint

# Docker
RUN curl -sL https://get.docker.com/builds/Linux/x86_64/docker-1.9.1 > /usr/bin/docker && \
    chmod +x /usr/bin/docker

# Build TCMU
RUN cd /usr/src && \
    git clone https://github.com/open-iscsi/tcmu-runner.git && \
    cd tcmu-runner && \
    git checkout f34b67c65b7844a6d3fcb24c2feaf7db90a889cd
RUN cd /usr/src/tcmu-runner && \
    cmake . -Dwith-glfs=false && \
    make && \
    make install && \
    cp scsi_defs.h /usr/local/include && \
    cp libtcmu_static.a /usr/local/lib/libtcmu.a

# Install libqcow
RUN curl -sfL https://github.com/libyal/libqcow/releases/download/20160123/libqcow-alpha-20160123.tar.gz | tar xvzf - -C /usr/src
RUN cd /usr/src/libqcow-20160123 && \
    ./configure
RUN cd /usr/src/libqcow-20160123 && \
    make -j$(nproc) && \
    make install

VOLUME /tmp
ENV TMPDIR /tmp
ENTRYPOINT ["./scripts/entry"]
CMD ["build"]
